from django.shortcuts import render
from datetime import date

persons = [
        {
            "id": 1,
            "name": "Александр Ярославич Невский",
            "years": "1252 — 1263",
            "desc": "Князь Новгородский, Великий князь Киевский и Владимирский из династии Рюриковичей, правивший в XIII веке. Прославился победами над шведами в Невской битве (1240) и над немецкими рыцарями в Ледовом побоище (1242), которые обезопасили северо-западные рубежи Руси. В условиях монгольского нашествия и западной угрозы выбрал курс на сотрудничество с Золотой Ордой для предотвращения новых разорительных войн и сохранения православия, что позволило русским землям собрать силы для будущего освобождения."
        },
        {
            "id": 2,
            "name": "Алаэддин-паша",
            "years": "1320 — 1331",
            "desc": "Первый великий визирь Османской империи, назначенный султаном Орханом I. Будучи одним из главных архитекторов раннего османского государства, разработал и кодифицировал основные законы, создал фундамент централизованной административной системы и сформировал институт янычар, что заложило основы для будущего могущества империи."
        },
        {
            "id": 3,
            "name": "Михаил Федорович Романов",
            "years": "1613 — 1645",
            "desc": "Первый царь из династии Романовых. Вступив на престол во время глубоких социальных потрясений, экономического и политического кризиса в Русском государстве, сумел их в целом преодолеть лишь к концу царствования."
        },
        {
            "id": 4,
            "name": "Карл Великий",
            "years": "768 — 814",
            "desc": "Король франков с 768 года, король лангобардов с 774 года, император Запада с 800 года из династии Каролингов. Путем многочисленных завоеваний объединил под своей властью большую часть Западной Европы, создав обширную империю. Проводил политику культурного возрождения (Каролингское возрождение) и административных реформ, заложив основы феодального строя и европейской государственности. Его империя стала историческим предшественником будущих государств Франции, Германии и Италии."
        },
        {
            "id": 5,
            "name": "Вильгельм III Оранский",
            "years": "1650 — 1702",
            "desc": "Правитель Нидерландов (штатгальтер с 1672 года) и король Англии, Шотландии и Ирландии (с 1689 года). Пришел к власти в ходе «Славной революции», свергнув своего тестя Якова II. Совместное правление с женой Марией II легитимизировало его претензии на престол. Закрепил переход к конституционной монархии, подписав «Билль о правах» (1689), который ограничил власть короны и усилил роль парламента. Его правление стало поворотным пунктом в становлении британской парламентской демократии и определило политический курс Англии в XVIII веке."
        },
        {
            "id": 6,
            "name": "Густав II Адольф",
            "years": "1611 — 1632",
            "desc": "Король Швеции из династии Васа. Вступив на престол в условиях войны с Данией, России и Речью Посполитой, провел масштабные военные, административные и экономические реформы, превратив Швецию в сильное централизованное государство и ведущую военную державу Северной Европы. Прославился как великий полководец и «отец современной войны» за тактические инновации в ходе Тридцатилетней войны, где погиб в жестокой битве при Лютцене. Его вмешательство коренным образом изменило ход войны в пользу протестантской коалиции."
        },
        {
            "id": 7,
            "name": "Петр I",
            "years": "1682 — 1725",
            "desc": "Первый Император Всероссийский. Вступив на престол в условиях отставания России от ведущих европейских держав, провел масштабные реформы практически во всех сферах жизни: государственное управление (учреждение Сената, коллегий), армию и флот (рекрутские наборы, создание регулярного войска и военно-морского флота), экономику (развитие мануфактур, протекционизм) и культуру («европеизация»). В результате Северной войны (1700–1721) прорубил «окно в Европу», закрепив за Россией выход к Балтийскому морю и статус великой империи."
        },
        {
            "id": 8,
            "name": "Сулейман I Великолепный",
            "years": "1520 — 1566",
            "desc": "Десятый султан Османской империи, при котором государство достигло пика своего могущества. Провел масштабные завоевания, подчинив Белград, Родос, Венгрию, Багдад и Месопотамию, и установив контроль над Средиземным морем и значительной частью Северной Африки. Провел кодификацию османского права («Законодатель»), покровительствовал искусству и архитектуре (период «золотого века» Османской империи). Его правление стало эпохой расцвета военной мощи, культурного развития и административной эффективности империи."
        },
        {
            "id": 9,
            "name": "Фридрих II Великий",
            "years": "1740 — 1786",
            "desc": "Король Пруссии из династии Гогенцоллернов. Вступив на престол в условиях нарастающей геополитической конкуренции в Европе, превратил Пруссию в ведущую военную державу через серию победоносных войн (в частности, за Австрийское наследство и Семилетнюю войну) и территориальные приобретения. Провел масштабные внутренние реформы в духе «просвещенного абсолютизма» (развитие образования, реорганизация армии, веротерпимость, модернизация законодательства), заложив основы для будущего объединения Германии под главенством Пруссии."
        }
    ]

cart = [
    {"id": 1,
     "historyPersons_ids" : [1, 8],
     "historyPersons_count": 2}
]

def GET_main_page(request):
    query = request.GET.get("q", "")
    filtered_persons = persons
    if query:
        filtered_persons = [p for p in persons if query.lower() in p["name"].lower()]
    return render(request, "index.html", {"persons": filtered_persons,
                                          "query": query, "cart": cart[0]})

def GET_HistoryPersonDetailed(request, person_id):
    person = next((p for p in persons if p["id"] == person_id), None)
    return render(request, "historyPersonDetalied.html", {"person": person})

def GET_orderForPredictYearPage(request, order_id):
    order_id = 1
    selectCart = next((x for x in cart if x["id"] == order_id), None)
    selectedPersons = [p for p in persons if p["id"] in selectCart["historyPersons_ids"]]
    return render(request, "orderForPredictingYear.html", {
        "cart": selectCart,
        "persons": selectedPersons
    })